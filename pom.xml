<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  *********************************************************************************************************************

  Tidalwave - blueHour
  %%
  Copyright (C) 2013 - 2013 Tidalwave_s.a.s. (http://tidalwave.it)
  %%
  *********************************************************************************************************************

  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations under the License.

  *********************************************************************************************************************

  $Id$

*********************************************************************************************************************
#L%
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.superpom</groupId>
        <artifactId>superpom</artifactId>
        <version>2.9</version>
    </parent>

    <!-- ===============================================================================================================

        This is the "Master POM" of the project. It contains all the metadata of the project, the global compilation
        and test settings, and a <dependencyManagement> section describing the versions of all the modules of this
        project (or the modules that are "exported", that is made available to others. This setup allows other projects
        to import all the modules in this project by means of reusing this POM with the "import scope" - see
        http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies

    ================================================================================================================ -->

    <groupId>it-tidalwave-accounting</groupId>
    <artifactId>bluehour</artifactId>
    <version>1.0-ALPHA-1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>blueHour (master)</name>
    <url>http://bluehour.tidalwave.it</url>
    <inceptionYear>2013</inceptionYear>
    <organization>
        <name>Tidalwave_s.a.s. (http://tidalwave.it)</name>
        <url>http://tidalwave.it</url>
    </organization>

    <!-- ===============================================================================================================

        TODO: review settings after the generation of the archetype and delete unwanted stuff. Delete this comment too.
        Some sections are alternate settings for different corporates / forge. Just keep the one you need and eventually
        add more.

    ================================================================================================================ -->
    <properties>
        <scm.repo.url>ssh://hg@bitbucket.org/tidalwave/bluehour-src</scm.repo.url>
        <scm.repo.readonly.url>https://bitbucket.org/tidalwave/bluehour-src</scm.repo.readonly.url>
        <scm.repo.browse.url>https://bitbucket.org/tidalwave/bluehour-src/src</scm.repo.browse.url>

        <tidalwave.ci.view>blueHour</tidalwave.ci.view>
        <tidalwave.issues>BH</tidalwave.issues>

        <tft.embedded-jdk-artifactId>it-tidalwave-oraclejdk7</tft.embedded-jdk-artifactId>
        <tft.embedded-jdk-classifier>macosx-intel</tft.embedded-jdk-classifier>
        <tft.embedded-jdk-name>jdk1.7.0u17</tft.embedded-jdk-name>
        <tft.embedded-jdk-version>1.7.0_17-1</tft.embedded-jdk-version>

        <netbeans.hint.jdkPlatform>JDK_1.7.0_17</netbeans.hint.jdkPlatform>
        <netbeans.hint.license>Tidalwave-ASF</netbeans.hint.license>
        <netbeans.compile.on.save>none</netbeans.compile.on.save>

        <netbeans.brandingToken>bluehour</netbeans.brandingToken>
        <netbeans.cluster>bluehour</netbeans.cluster>
        <tft.netbeans.useOSGiDependencies>false</tft.netbeans.useOSGiDependencies>

        <tft.appbundle.name>blueHour</tft.appbundle.name>
        <tft.appbundle.signature>TDLW</tft.appbundle.signature>
        <tft.netbeans.vmargs>-Dfoo=bar</tft.netbeans.vmargs> <!-- This property can't be empty -->
    </properties>

    <!-- ===============================================================================================================

        Here you declare the versions for all the modules in your project. Don't declare here the versions for
        external dependencies, as they should go in the "modules POM" specific <dependencyManagement>

    ================================================================================================================ -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-module1</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-application-customization</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-branding</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-application</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-application</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>it-tidalwave-bluehour-boot</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-macosx</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>it-tidalwave-accounting</groupId>
                <artifactId>bluehour-embedded-jre</artifactId>
                <version>1.0-ALPHA-1-SNAPSHOT</version>
            </dependency>

            <!-- TODO: ADD OTHER DEPENDENCY SECTIONS FOR EXPOSED MODULES OF YOUR PROJECT HERE-->

        </dependencies>
    </dependencyManagement>

    <!-- ===============================================================================================================

        The Sonatype Releases repository is useful as you're likely to use it as a stage repository towards Maven
        Central. If you're depending on recently released stuff, you might find it there with a few hours of advance
        in respect of Maven Central.
        The Sonatype Snapshots repository is useful as you're likeky to use it to deploy your snaphots, and you might
        depend on some snapshot.

    ================================================================================================================ -->
    <repositories>
        <repository>
            <id>releases-oss.sonatype.org</id>
            <name>Sonatype Releases Repository</name>
            <url>http://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>snapshots-oss.sonatype.org</id>
            <name>Sonatype Snapshots Repository</name>
            <url>http://oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

<!--    <mailingLists>
        <mailingList>
            <name>Continuous Integration</name>
            <post>ci@bluehour.java.net</post>
            <archive>http://java.net/projects/bluehour/lists/ci/archive</archive>
        </mailingList>
        <mailingList>
            <name>Developers</name>
            <post>dev@bluehour.java.net</post>
            <archive>http://java.net/projects/bluehour/lists/dev/archive</archive>
        </mailingList>
    </mailingLists>-->

    <!-- Repeated because of http://jira.codehaus.org/browse/SCM-442 -->
    <scm>
        <connection>scm:hg:${scm.repo.readonly.url}</connection>
        <developerConnection>scm:hg:${scm.repo.effective.url}</developerConnection>
        <url>${scm.repo.browse.url}</url>
    </scm>

    <!-- ===============================================================================================================

         Here you customize your build workflow.

    ================================================================================================================ -->
    <!--    <build>
        <plugins>
           <plugin>
            </plugin>
        </plugins>
    </build>-->

    <profiles>
        <profile>
            <id>deploy-extra-artifacts</id>
            <build>
                <plugins>
                    <!-- Attaches the extra artifacts prepared during the release process by the assembly plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.build.finalName}-project.tar.gz</file>
                                    <type>tar.gz</type>
                                    <classifier>project</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${project.build.finalName}-bin.tar.gz</file>
                                    <type>tar.gz</type>
                                    <classifier>bin</classifier>
                                </artifact>
                                <artifact>
                                    <file>application/target/bluehour-application-${project.version}.zip</file>
                                    <type>zip</type>
                                    <classifier>executable</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <modules>
        <module>modules</module>
    </modules>
</project>

