<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  *********************************************************************************************************************

  Tidalwave - blueHour
  %%
  Copyright (C) 2013 - 2021 Tidalwave_s.a.s. (http://tidalwave.it)
  %%
  *********************************************************************************************************************

  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations under the License.

  *********************************************************************************************************************

  $Id$

*********************************************************************************************************************
#L%
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.accounting</groupId>
        <artifactId>bluehour</artifactId>
        <version>1.0-ALPHA-7-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- ===============================================================================================================

        This is the "Modules POM" of the project. It is an intermediate-level POM, just below the "Master POM", which
        takes care of everything we need for used dependencies: declare their versions with a <dependencyManagement>
        section. This POM includes, one by one, all the actual modules of the project.

    ================================================================================================================ -->

    <groupId>it.tidalwave.accounting</groupId>
    <artifactId>bluehour-modules</artifactId>
    <version>1.0-ALPHA-7-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>blueHour (modules)</name>
    <description>The parent POM of all modules.</description>

    <!-- ===============================================================================================================

        Here you declare some properties defining the version of dependencies used by this project. All dependencies
        for all modules must be enumerated, and specified below in the <dependencyManagement> section.

    ================================================================================================================ -->
    <properties>
        <tft.javac.source>1.8</tft.javac.source>
        <tft.javac.target>1.8</tft.javac.target>
        <tft.javac.release>8</tft.javac.release>

        <activation.version>1.1.1</activation.version>
        <aquafx.version>0.2</aquafx.version>
        <commons-codec.version>1.9</commons-codec.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <guava.version>30.1-jre</guava.version>
        <jaxb.version>2.2.11</jaxb.version>
        <!-- Should activate by itself with JDK 11+, but it fails with Jenkins Maven integration. -->
        <tft.javafx.version>11.0.1</tft.javafx.version>
        <tft.spring.version>5.3.1</tft.spring.version>
        <steelblue.version>1.0-ALPHA-17</steelblue.version>
        <thesefoolishthings.version>3.2-ALPHA-1</thesefoolishthings.version>
        <uuid.version>2.1.5-201007271250</uuid.version>

        <tft.appbundle.name>blueHour</tft.appbundle.name>
        <tft.appbundle.signature>TDLW</tft.appbundle.signature>
    </properties>

    <!-- ===============================================================================================================

        Here you declare the dependencies used by all the modules in the project. This section only instructs Maven to
        remember the version of each dependency, while actual dependencies will be enumerated in each module requiring
        them. This section is a fundamental part of Maven best practices, as it ensures that dependency convergence is
        preserved: that is the same dependency is not listed in different places with different versions.
        For the sake of readability, don't inline version numbers here, but use properties specified in the
        <properties> section above.
        Keep dependencies for tests separated for better readability.
        You shouldn't declare the modules of this project here, instead they should go in the <dependencyManagement>
        section of the "Master POM".

    ================================================================================================================ -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${tft.spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.steelblue</groupId>
                <artifactId>steelblue</artifactId>
                <version>${steelblue.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aquafx-project</groupId>
                <artifactId>aquafx</artifactId>
                <version>${aquafx.version}</version>
            </dependency>
            <!-- Should activate by itself with JDK 11+, but it fails with Jenkins Maven integration. -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-base</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-graphics</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${activation.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- ===============================================================================================================

        Here you declare some actual dependencies that are shared by all the modules in this project. This usually
        includes common stuff such as annotations, annotation processors, and the libraries for testing. This section
        might be empty.
        Don't specify versions here - they should be listed in the <dependencyManagement> section above.
        Keep dependencies for tests separated for better readability.

    ================================================================================================================ -->
    <dependencies>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Keep this before the mockito-all dependency - see http://stackoverflow.com/questions/15833015/ -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>org.aspectj:aspectjweaver</exclude>
                                        <exclude>com.kenai.nbpwr:org-slf4j-jdk14</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- ===============================================================================================================

        Inclusion of modules participating in this project. Remember to list all the modules as soon as you add them
        to the project.

    ================================================================================================================ -->
    <modules>
        <module>Model</module>
        <module>ModelInMemory</module>
        <module>XmlMarshalling</module>
        <module>iBizImporter</module>
        <module>UI</module>
        <module>UICommons</module>
        <module>UICustomerExplorer</module>
        <module>UIProjectExplorer</module>
        <module>UIJobEventExplorer</module>
        <module>UIHourlyReport</module>
        <module>UIiBizImporter</module>
        <module>JavaFXUI</module>
        <module>JavaFXApplication</module>
        <module>Installers/macOS</module>
    </modules>

</project>
